generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  slug        String   @unique
  description String?
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdAt   DateTime @default(now()) @map("created_at")
  color       String   @default("#6B7280")
  posts       Post[]

  @@map("categories")
}

model Author {
  id        Int      @id @default(autoincrement())
  name      String
  email     String?  @unique
  bio       String?
  updatedAt DateTime @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
  avatar    String?
  posts     Post[]

  @@map("authors")
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  slug      String    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  posts     PostTag[]

  @@map("tags")
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  slug        String    @unique
  publishedAt DateTime? @map("published_at")
  categoryId  Int?      @map("category_id")
  authorId    Int       @map("author_id")
  excerpt     String?
  content     String
  updatedAt   DateTime  @updatedAt @map("updated_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  featured    Boolean   @default(false)
  imageUrl    String?   @map("image_url")
  status      Status    @default(DRAFT)
  tags        PostTag[]
  author      Author    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  category    Category? @relation(fields: [categoryId], references: [id])

  @@index([status])
  @@index([featured])
  @@index([publishedAt])
  @@index([categoryId])
  @@index([authorId])
  @@index([slug])
  @@map("posts")
}

model PostTag {
  id     Int  @id @default(autoincrement())
  postId Int  @map("post_id")
  tagId  Int  @map("tag_id")
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  tag    Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@unique([postId, tagId])
  @@map("post_tags")
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}
